INTRO TO CSS

While HTML is the fundamental structure of every web page, it can be visually unappealing on its own. 
Cascading Style Sheets or CSS is a language web developers use to style the HTML content on a web page. 
If you’re interested in modifying colors, font types, font sizes, images, element positioning, and more, CSS is the tool for the job.


SETUP AND SYNTAX (CSS ANATOMY)

There are two different methods, or syntaxes, for writing CSS code. 

SELECTOR:
p{
    color:blue;
}

INLINE:
<p style='color:blue;>Hello World!</p>

The first syntax shows CSS applied as a ruleset, while the second shows it written as an inline style. 
Two different methods of writing CSS may seem a bit intimidating at first, but it’s not as bad as it looks!

Both methods contain common features in their anatomy. Notice how both syntaxes contain a declaration. Declarations are the core of CSS. 
They apply a style to the selected element. Here, the <p> element has been selected in both syntaxes and will be styled to display the text in blue.

Understanding that a declaration is used to style a selected element is key to learning how to style HTML documents with CSS! 


Ruleset Terms:

SELECTOR:

p{
    color:blue;
}

Selector—The beginning of the ruleset used to target the element that will be styled.

Declaration Block—The code in-between (and including) the curly braces ({ }) that contains the CSS declaration(s).

Declaration—The group name for a property and value pair that applies a style to the selected element.

Property—The first part of the declaration that signifies what visual characteristic of the element is to be modified.

Value—The second part of the declaration that signifies the value of the property.


Inline Style Terms:

INLINE:

<p style='color:blue;>Hello World!</p>

Opening Tag—The start of an HTML element. This is the element that will be styled.

Attribute—The style attribute is used to add CSS inline styles to an HTML element.

Declaration—The group name for a property and value pair that applies a style to the selected element.

Property—The first part of the declaration that signifies what visual characteristic of the element is to be modified.

Value—The second part of the declaration that signifies the value of the property.


INLINE STYLES:

Although CSS is a different language than HTML, it’s possible to write CSS code directly within HTML code using inline styles.
To style an HTML element, you can add the style attribute directly to the opening tag. 
After you add the attribute, you can set it equal to the CSS style(s) you’d like applied to that element.

<p style='color: red;'>I'm learning to code!</p>

The code in the example above demonstrates how to use inline styling. The paragraph element has a style attribute within its opening tag. 
Next, the style attribute is set equal to color: red;, which will set the color of the paragraph text to red within the browser.

If you’d like to add more than one style with inline styles, simply keep adding to the style attribute. 
Make sure to end the styles with a semicolon (;).

<p style='color: red; font-size: 20px;'>I'm learning to code!</p>

It’s important to know that inline styles are a quick way of directly styling an HTML element, but are rarely used when creating websites.
But you may encounter circumstances where inline styling is necessary, so understanding how it works, and recognizing it in HTML code is good knowledge to have.


INTERNAL STYLESHEET:

As previously stated, inline styles are not the best way to style HTML elements. If you wanted to style, for example, multiple <h1> elements, you would have to add inline styling to each element manually. 
In addition, you would also have to maintain the HTML code when additional <h1> elements are added.

Fortunately, HTML allows you to write CSS code in its own dedicated section with a <style> element nested inside of the <head> element. 
The CSS code inside the <style> element is often referred to as an internal stylesheet.

An internal stylesheet has certain benefits and use cases over inlines styles, but once again, it’s not best practice. 
Understanding how to use internal stylesheets is nonetheless helpful knowledge to have.

To create an internal stylesheet, a <style> element must be placed inside of the <head> element.

<head>
  <style>


  </style>
</head>

After adding opening and closing <style> tags in the head section, you can begin writing CSS code.

<head>
  <style>
    p {
      color: red;
      font-size: 20px;
    }
  </style>
</head>

The CSS code in the example above changes the color of all paragraph text to red and also changes the size of the text to 20 pixels. 
Note how the syntax of the CSS code matches (for the most part) the syntax you used for inline styling. The main difference is that you can specify which elements to apply the styling.


EXTERNAL STYLESHEET:

Developers avoid mixing code by storing HTML and CSS code in separate files (HTML files contain only HTML code, and CSS files contain only CSS code).
You can create an external stylesheet by using the .css file name extension, like so: style.css

With an external stylesheet, you can write all the CSS code needed to style a page without sacrificing the readability and maintainability of your HTML file.


LINKING STYLESHEET:

When HTML and CSS codes are in separate files, the files must be linked. Otherwise, the HTML file won’t be able to locate the CSS code, and the styling will not be applied.

You can use the <link> element to link HTML and CSS files together. The <link> element must be placed within the head of the HTML file. 
It is a self-closing tag and requires the following attributes:

href — like the anchor element, the value of this attribute must be the address, or path, to the CSS file.
rel — this attribute describes the relationship between the HTML file and the CSS file. Because you are linking to a stylesheet, the value should be set to stylesheet.
When linking an HTML file and a CSS file together, the <link> element will look like the following:

<link href='https://www.codecademy.com/stylesheets/style.css' rel='stylesheet'>

Note that in the example above, the path to the stylesheet is a URL:

https://www.codecademy.com/stylesheets/style.css

Specifying the path to the stylesheet using a URL is one way of linking a stylesheet.

If the CSS file is stored in the same directory as your HTML file, then you can specify a relative path instead of a URL, like so:

<link href='./style.css' rel='stylesheet'>

Using a relative path is very common way of linking a stylesheet.


OVERVIEW:

The basic anatomy of CSS syntax written for both inline styles and stylesheets.

Some commonly used CSS terms, such as ruleset, selector, and declaration.

CSS inline styles can be written inside the opening HTML tag using the style attribute.

Inline styles can be used to style HTML, but it is not the best practice.

An internal stylesheet is written using the <style> element inside the <head> element of an HTML file.

Internal stylesheets can be used to style HTML but are also not best practice.

An external stylesheet separates CSS code from HTML, by using the .css file extension.

External stylesheets are the best approach when it comes to using HTML and CSS.

External stylesheets are linked to HTML using the <link> element.

